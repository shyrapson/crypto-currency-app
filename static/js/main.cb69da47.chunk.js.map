{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","services/cryptoApi.js","components/Homepage.jsx","components/Loader.jsx","components/Exchanges.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","services/cryptoNewsApi.jsx","components/News.jsx","App.js","app/store.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","_useState","useState","_useState2","Object","slicedToArray","activeMenu","setActiveMenu","_useState3","_useState4","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","react_default","a","createElement","className","avatar","src","icon","size","typography","Title","level","react_router_dom","to","es_button","onClick","MenuOutlined","menu","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","createRequest","url","method","params","referenceCurrencyUuid","tiers","orderBy","orderDirection","offset","headers","x-rapidapi-host","x-rapidapi-key","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","concat","getExchanges","coinId","getCryptoDetails","getCryptoHistory","_ref","timePeriod","useGetCryptosQuery","useGetExchangesQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","Typography","Homepage","_data$data","_useGetCryptosQuery","data","isFetching","globalStats","stats","Fragment","row","col","span","statistic","title","value","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","components_Cryptocurrencies","simplified","components_News","Loader","spin","Text","Collapse","Panel","Exchanges","_useGetExchangesQuery","components_Loader","console","log","exchanges","Exchanges_Title","Cryptocurrencies","cryptosList","cryptos","setCryptos","searchTerm","setSearchTerm","_cryptosList$data","filteredData","coins","filter","coin","name","toLowerCase","includes","input","placeholder","onChange","e","target","gutter","map","currency","xs","sm","lg","key","uuid","card","rank","extra","iconUrl","alt","hoverable","price","marketCap","change","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Tooltip","Legend","LineChart","_coinHistory$data5","coinHistory","currentPrice","coinName","coinPrice","coinTimeStamp","i","_coinHistory$data","_coinHistory$data$his","history","length","_coinHistory$data2","push","_coinHistory$data3","_coinHistory$data3$hi","_coinHistory$data4","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","LineChart_Title","dist","options","scales","yAxes","ticks","beginAtZero","Option","Select","CryptoDetails","_cryptoDetails$allTim","_cryptoDetails$allTim2","_cryptoDetails$supply","_cryptoDetails$supply2","_cryptoDetails$supply3","_cryptoDetails$supply4","_cryptoDetails$supply5","useParams","setTimePeriod","_useGetCryptoDetailsQ","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","supply","confirmed","CheckOutlined","StopOutlined","ExclamationCircleOutlined","circulating","CryptoDetails_Title","symbol","es_select","defaultValue","date","components_LineChart","CryptoDetails_Text","_ref2","dangerouslySetInnerHTML","__html","description","links","link","type","href","rel","cryptoNewsApi","getCryptoNews","newsCategory","safeSearch","textFormat","x-bingapis-sdk","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","option","children","indexOf","News_Option","news","_news$image","_news$image$thumbnail","_news$provider$","_news$provider$$image","_news$provider$$image2","_news$provider$2","News_Title","style","maxWidth","maxHeight","image","thumbnail","contentUrl","provider","News_Text","moment","datePublished","startOf","fromNow","App","components_Navbar","layout","react_router","exact","path","element","components_Homepage","components_Exchanges","components_CryptoDetails","color","textAlign","space","store","configureStore","reducer","_reducer","defineProperty","middleware","getDefaultMiddleware","ReactDOM","render","StrictMode","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.cb69da47.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cryptocurrency.88532732.png\";","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Menu, Typography, Avatar } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  HomeOutlined,\r\n  MoneyCollectOutlined,\r\n  BulbOutlined,\r\n  FundOutlined,\r\n  MenuOutlined,\r\n} from \"@ant-design/icons\";\r\nimport icon from \"../images/cryptocurrency.png\";\r\n\r\nfunction Navbar() {\r\n  const [activeMenu, setActiveMenu] = useState(true);\r\n  const [screenSize, setScreenSize] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setScreenSize(window.innerWidth);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (screenSize < 768) {\r\n      setActiveMenu(false);\r\n    } else {\r\n      setActiveMenu(true);\r\n    }\r\n  }, [screenSize]);\r\n\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <div className=\"logo-container\">\r\n        <Avatar src={icon} size=\"large\" />\r\n        <Typography.Title level={2} className=\"logo\">\r\n          <Link to=\"/\">Cryptoverse</Link>\r\n        </Typography.Title>\r\n        <Button className=\"menu-control-container\" onClick={()=> setActiveMenu(!activeMenu)}>\r\n            <MenuOutlined/>\r\n        </Button>\r\n\r\n      </div>\r\n      {activeMenu && (\r\n <Menu theme=\"dark\">\r\n <Menu.Item icon={<HomeOutlined />}>\r\n   <Link to=\"/\">Home</Link>\r\n </Menu.Item>\r\n <Menu.Item icon={<FundOutlined />}>\r\n   <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n </Menu.Item>\r\n <Menu.Item icon={<MoneyCollectOutlined />}>\r\n   <Link to=\"/exchange\">Exchanges</Link>\r\n </Menu.Item>\r\n <Menu.Item icon={<BulbOutlined />}>\r\n   <Link to=\"/news\">News</Link>\r\n </Menu.Item>\r\n</Menu>\r\n      )}\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import {\r\n  createApi,\r\n  fetchBaseQuery\r\n} from '@reduxjs/toolkit/query/react';\r\n\r\n\r\n// const cryptoApiHeaders = {\r\n//   'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n//   'x-rapidapi-key': '24afd95508msh2c343f20c75ba19p100ab6jsnca13a0510852'\r\n// };\r\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\r\nconst createRequest = (url) => ({\r\n  method: 'GET',\r\n  url,\r\n  params: {\r\n    referenceCurrencyUuid: 'yhjMzLPhuIDl',\r\n    tiers: '1',\r\n    orderBy: 'marketCap',\r\n    orderDirection: 'desc',\r\n    offset: '0'\r\n  },\r\n  headers: {\r\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n    'x-rapidapi-key': '24afd95508msh2c343f20c75ba19p100ab6jsnca13a0510852'\r\n  }\r\n\r\n\r\n});\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: \"cryptoApi\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl\r\n  }),\r\n  endpoints: (builder) => ({\r\n    getCryptos: builder.query({\r\n      query: (count) => createRequest(`/coins?limit=${count}`),\r\n    }),\r\n    getExchanges: builder.query({\r\n      query: (coinId) => createRequest(`/coin/exchanges`),\r\n    }),\r\n    getCryptoDetails: builder.query({\r\n      query: (coinId) => createRequest(`/coin/${coinId}`),\r\n    }),\r\n    getCryptoHistory: builder.query({\r\n      query: ({coinId,timePeriod}) => createRequest(`/coin/${coinId}/history?timePeriod=${timePeriod}`),\r\n    }),\r\n  }),\r\n});\r\n\r\n// this will be imported in the component that it is needed\r\nexport const {\r\n  useGetCryptosQuery,\r\n  useGetExchangesQuery,\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery\r\n} = cryptoApi;\r\n\r\n","import React from \"react\";\r\nimport millify from \"millify\";\r\nimport { Typography, Row, Col, Statistic } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\nimport { Cryptocurrencies, News } from \"../components\";\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction Homepage() {\r\n  const { data, isFetching } = useGetCryptosQuery(10);\r\n\r\n  const globalStats = data?.data?.stats;\r\n  if (isFetching) return \"loading...\";\r\n\r\n  return (\r\n    <>\r\n      <Title level={2} className=\"heading\">\r\n        Global Crypto Stats\r\n      </Title>\r\n      <Row>\r\n        <Col span={12}>\r\n          <Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Exchanges\"\r\n            value={millify(globalStats.totalExchanges)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Market Cap\"\r\n            value={millify(globalStats.totalMarketCap)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total 24h Volumn\"\r\n            value={millify(globalStats.total24hVolume)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Market\"\r\n            value={millify(globalStats.totalMarkets)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"home-title\">\r\n          Top 10 Cryptocurrencies in the world\r\n        </Title>\r\n        <Title level={3} className=\"show-more\">\r\n          <Link to=\"/cryptocurrencies\">show more</Link>\r\n        </Title>\r\n      </div>\r\n      {/* if simplified is true in the homepage component render 10 else 100 in cryptocurrencies component */}\r\n      <Cryptocurrencies simplified />\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"home-title\">\r\n          Latest Crypto News\r\n        </Title>\r\n        <Title level={3} className=\"show-more\">\r\n          <Link to=\"/news\">show more</Link>\r\n        </Title>\r\n      </div>\r\n      <News simplified />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import React from 'react'\r\nimport {Spin} from 'antd'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className='loader'><Spin/></div>\r\n  )\r\n}\r\n\r\nexport default Loader","import React from \"react\";\r\nimport millify from \"millify\";\r\nimport { Collapse, Row, Col, Typography, Avatar } from \"antd\";\r\nimport { useGetExchangesQuery } from \"../services/cryptoApi.js\";\r\nimport Loader from \"./Loader.jsx\";\r\nconst { Text,Title } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\n\r\nfunction Exchanges() {\r\n  const { data, isFetching } = useGetExchangesQuery();\r\n  if(isFetching) return <Loader/>\r\n  console.log(data);\r\n  const exchangeList = data?.data?.exchanges;\r\n  return (\r\n    <>\r\n    \r\n      <Row>\r\n        <Col span={6}>Exchanges</Col>\r\n        <Col span={6}>24h Trade Volume</Col>\r\n        <Col span={6}>Markets</Col>\r\n        <Col span={6}>Change</Col>\r\n      </Row>\r\n      <Row>\r\n        <Title >exchanges OTW...., thank you....</Title>\r\n        {/* {exchangeList.map((exchange) => (\r\n          <Col span={24}>\r\n            <Collapse>\r\n              <Panel\r\n                key={exchange.uuid}\r\n                showArrow={false}\r\n                header={\r\n                  <Row key={exchange.uuid}>\r\n                    <Col span={6}>\r\n                      <Text>\r\n                        <strong>{exchange.rank}.</strong>\r\n                      </Text>\r\n                      <Avatar\r\n                        className=\"exchange-image\"\r\n                        src={exchange.iconUrl}\r\n                      />\r\n                      <Text>\r\n                        <strong>{exchange.name}</strong>\r\n                      </Text>\r\n                    </Col>\r\n                    <Col span={6}>${millify(exchange.volume)}</Col>\r\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\r\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\r\n                  </Row>\r\n                }\r\n              >\r\n                <Col dangerouslySetInnerHTML={{ __html: exchange?.description }} />;\r\n              </Panel>\r\n            </Collapse>\r\n          </Col>\r\n        ))} */}\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Exchanges;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport millify from \"millify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Row, Col, Input } from \"antd\";\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\n\r\nfunction Cryptocurrencies({ simplified }) {\r\n  //  if simplified is true in the homepage component render 10 else 100 in cryptocurrencies component \r\n  const count = simplified ? 10 : 100;\r\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\r\n  const [cryptos, setCryptos] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const filteredData = cryptosList?.data?.coins.filter((coin) =>\r\n      coin.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setCryptos(filteredData);\r\n  }, [cryptosList, searchTerm]);\r\n\r\n  if (isFetching) return \"loading...\";\r\n\r\n  return (\r\n    <>\r\n    {/* set simplified to be false so it wont render on the homepage */}\r\n      {!simplified && (\r\n        <div className=\"search-crypto\">\r\n          <Input\r\n            placeholder=\"Search Crptocurrency\"\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      <Row gutter={(32, 32)} className=\"crypto-card-container\">\r\n        {cryptos?.map((currency) => (\r\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.uuid}>\r\n           \r\n            <Link to={`/crypto/${currency.uuid}`}>\r\n              <Card\r\n                title={`${currency.rank}.${currency.name}`}\r\n                extra={<img className=\"crypto-image\" src={currency.iconUrl} alt=\"\"/>}\r\n                hoverable\r\n              >\r\n                <p>Price:{millify(currency.price)}</p>\r\n                <p>Market:{millify(currency.marketCap)}</p>\r\n                <p>Daily Change:{millify(currency.change)}%</p>\r\n              </Card>\r\n            </Link>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cryptocurrencies;\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Col, Row, Typography } from \"antd\";\r\nimport { current } from \"@reduxjs/toolkit\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n  const coinPrice = [];\r\n  const coinTimeStamp = [];\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinPrice.push(coinHistory?.data?.history[i].price);\r\n  }\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinTimeStamp.push(\r\n      new Date(coinHistory?.data?.history[i].timestamp*1000).toLocaleDateString()\r\n    );\r\n  }\r\n\r\n  const data = {\r\n    labels: coinTimeStamp,\r\n    datasets: [\r\n      {\r\n        label: \"Price in USD\",\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: \"#0071bd\",\r\n        borderColor: \"#ff1883\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"chart-header\">\r\n        <Title level={2} className=\"chart-title\">\r\n          {coinName} Price Chart\r\n        </Title>\r\n        <Col className=\"price-container\">\r\n          <Title level={5} className=\"price-change\">\r\n            {coinHistory?.data?.change}%\r\n          </Title>\r\n          <Title level={5} className=\"current-price\">\r\n            Current{coinName} price: ${currentPrice}\r\n          </Title>\r\n        </Col>\r\n        <Line data={data} options={options} />\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import React, { useState } from \"react\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport millify from \"millify\";\r\nimport { Row, Typography, Col, Select } from \"antd\";\r\nimport {\r\n  MoneyCollectOutlined,\r\n  DollarCircleOutlined,\r\n  FundOutlined,\r\n  ExclamationCircleOutlined,\r\n  StopOutlined,\r\n  TrophyOutlined,\r\n  CheckOutlined,\r\n  NumberOutlined,\r\n  ThunderboltOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from \"../services/cryptoApi\";\r\nimport LineChart from \"./LineChart\";\r\n\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nfunction CryptoDetails() {\r\n  // useParams takes the id in the url and simply allow you to use it as a variable\r\n  const { coinId } = useParams();\r\n  const [timePeriod, setTimePeriod] = useState(\"7d\");\r\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n  const { data:coinHistory } = useGetCryptoHistoryQuery({coinId,timePeriod});\r\nconsole.log(coinHistory)\r\n  const cryptoDetails = data?.data.coin;\r\n\r\n  if (isFetching) return 'loading....';\r\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\r\n\r\n  const stats = [\r\n    {\r\n      title: \"Price to USD\",\r\n      value: `$ ${cryptoDetails?.price && millify(cryptoDetails?.price)}`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    { title: \"Rank\", value: cryptoDetails?.rank, icon: <NumberOutlined /> },\r\n    {\r\n      title: \"24h Volume\",\r\n      value: `$ ${cryptoDetails?.price && millify(cryptoDetails[\"24hVolume\"])}`,\r\n      icon: <ThunderboltOutlined />,\r\n    },\r\n\r\n    {\r\n      title: \"Market Cap\",\r\n      value: `$ ${\r\n        cryptoDetails?.marketCap && millify(cryptoDetails?.marketCap)\r\n      }`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"All-time-high(daily avg.)\",\r\n      value: `$ ${\r\n        cryptoDetails?.allTimeHigh?.price &&\r\n        millify(cryptoDetails?.allTimeHigh?.price)\r\n      }`,\r\n      icon: <TrophyOutlined />,\r\n    },\r\n  ];\r\n\r\n  const genericStats = [\r\n    {\r\n      title: \"Number Of Markets\",\r\n      value: cryptoDetails?.numberOfMarkets,\r\n      icon: <FundOutlined />,\r\n    },\r\n    {\r\n      title: \"Number Of Exchanges\",\r\n      value: cryptoDetails?.numberOfExchanges,\r\n      icon: <MoneyCollectOutlined />,\r\n    },\r\n    {\r\n      title: \"Aprroved Supply\",\r\n      value: cryptoDetails?.supply?.confirmed ? (\r\n        <CheckOutlined />\r\n      ) : (\r\n        <StopOutlined />\r\n      ),\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"Total Supply\",\r\n      value: `$ ${\r\n        cryptoDetails?.supply?.total && millify(cryptoDetails?.supply?.total)\r\n      }`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"Circulating Supply\",\r\n      value: `$ ${\r\n        cryptoDetails?.supply?.circulating &&\r\n        millify(cryptoDetails?.supply?.circulating)\r\n      }`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Col className=\"coin-detail-container\">\r\n      <Col className=\"coin-heading-container\">\r\n        <Title level={2} className=\"coin-name\">\r\n          {cryptoDetails?.name} ({cryptoDetails?.symbol})Price\r\n        </Title>\r\n        <p>\r\n          {cryptoDetails?.name} View value statistics, market cap and supply.\r\n        </p>\r\n      </Col>\r\n      <Select\r\n        defaultValue=\"7d\"\r\n        className=\"select-timeperiod\"\r\n        placeholder=\"Select Time Period\"\r\n        onChange={(value) => setTimePeriod(value)}\r\n      >\r\n        {time.map((date) => (\r\n          <Option key={date}>{date}</Option>\r\n        ))}\r\n      </Select>\r\n      <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails?.price)} coinName={cryptoDetails?.name}/>\r\n      <Col className=\"stats-container\">\r\n        <Col className=\"coin-value-statistics\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-datails\">\r\n              {cryptoDetails?.name} Value statistics\r\n            </Title>\r\n            <p>An overview showing the stats of {cryptoDetails?.name}</p>\r\n          </Col>\r\n          {stats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n        <Col className=\"other-stats-info\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-datails\">\r\n              Other statistics\r\n            </Title>\r\n            <p>An overview showing the stats of all cryptocurrencies</p>\r\n          </Col>\r\n          {genericStats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n      <Col className=\"coin-desc-link\">\r\n        <Row className=\"coin-desc\">\r\n          <Title level={2} className=\"coin-details-heading\">\r\n            What is {cryptoDetails?.name}{\" \"}\r\n            <Col\r\n              dangerouslySetInnerHTML={{ __html: cryptoDetails?.description }}\r\n            />\r\n          </Title>\r\n        </Row>\r\n        <Col className=\"coin-links\">\r\n          <Title level={3} className=\"coin-details-heading\">\r\n            {cryptoDetails?.name} Links\r\n          </Title>\r\n          {cryptoDetails?.links.map((link) => (\r\n            <Row className=\"coin-link\" key={link.uuid}>\r\n              <Title level={5} className=\"link-name\">\r\n                {link?.type}\r\n              </Title>\r\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\r\n                {link?.name}\r\n              </a>\r\n            </Row>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default CryptoDetails;\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com';\r\nconst createRequest = (url) => ({  \r\n    method: 'GET',\r\n    url,\r\n    params: {safeSearch: 'Off', textFormat: 'Raw'},\r\n    headers: {\r\n      'x-bingapis-sdk': 'true',\r\n      'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n      'x-rapidapi-key': '24afd95508msh2c343f20c75ba19p100ab6jsnca13a0510852'\r\n    }\r\n\r\n});\r\n\r\nexport const cryptoNewsApi = createApi({\r\n  reducerPath: \"cryptoNewsApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptoNews: builder.query({\r\n      query: ({newsCategory,count}) =>createRequest(`/news/search?q=${newsCategory}&scount=${count}`),\r\n    }),\r\n  }),\r\n});\r\n\r\n// this will be imported in the component that it is needed\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNewsApi\";\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\nconst demoImage =\r\n  \"https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News\";\r\n\r\nfunction News({ simplified }) {\r\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\r\n  const { data: cryptoNews } = useGetCryptoNewsQuery({\r\n    newsCategory,\r\n    count: simplified ? 6 : 12,\r\n  });\r\n  // useGetCryptoNewsQuery is use to get the names of crypto and it is passed to the Select\r\n  const { data } = useGetCryptosQuery(100);\r\n\r\n  if (!cryptoNews?.value) return \"loading\";\r\n\r\n  return (\r\n    <Row gutter={[24, 24]}>\r\n      {/* use select to get one specific news of one cryptocurrencies we are interested in */}\r\n      {!simplified && (\r\n        <Col span={24}>\r\n          <Select\r\n            showSearch\r\n            className=\"select-news\"\r\n            placeholder=\"Select a Crypto\"\r\n            optionFilterProp=\"children\"\r\n            onChange={(value) => setNewsCategory(value)}\r\n            // fiters out the options so it only shows the one for our selected cryptocurrency\r\n            filterOption={(input, option) =>\r\n              // options children . index of the inserted input might be greater or equal to zero\r\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n          >\r\n            <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\r\n            {data?.data?.coins.map((coin) => (\r\n              <Option value={coin.name}>{coin.name}</Option>\r\n            ))}\r\n          </Select>\r\n        </Col>\r\n      )}\r\n      {cryptoNews.value.map((news, i) => (\r\n        <Col xs={24} sm={12} lg={8} key={i}>\r\n          <Card hoverable className=\"news-card\">\r\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n              <div className=\"news-image-container\">\r\n                <Title className=\"news-title\" level={4}>\r\n                  {news.name}\r\n                </Title>\r\n                {/* added a || demo url for those that dont have image url */}\r\n                <img\r\n                  style={{ maxWidth: \"200px\", maxHeight: \"100px\" }}\r\n                  src={news?.image?.thumbnail?.contentUrl || demoImage}\r\n                  alt=\"news\"\r\n                />\r\n              </div>\r\n              {/* if a description length is longer than 100 characters then render */}\r\n              <p>\r\n                {news.description > 100\r\n                  ? `{news.description.substring(0,100)}...`\r\n                  : news.description}\r\n              </p>\r\n              <div className=\"provider container\">\r\n                <Avatar\r\n                  src={news.provider[0]?.image?.thumbnail?.contentUrl}\r\n                  alt=\"\"\r\n                ></Avatar>\r\n                <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\r\n              </div>\r\n              {/* moments function gets the time from when the article is being posted to the present time */}\r\n              <Text> {moment(news.datePublished).startOf(\"ss\").fromNow()}</Text>\r\n            </a>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default News;\r\n","import React from \"react\";\nimport { Route, Routes, Link,Navigate } from \"react-router-dom\";\nimport { Layout, Typography, Space } from \"antd\";\nimport {\n  Navbar,\n  Exchanges,\n  Homepage,\n  Cryptocurrencies,\n  News,\n  CryptoDetails,\n} from \"./components\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <div className=\"navbar\">\n        <Navbar />\n      </div>\n      <div className=\"main\">\n        <Layout>\n          <div className=\"routes\">\n            <Routes>\n              <Route exact path=\"/\" element={<Homepage />} />\n              <Route path=\"/exchange\" element={<Exchanges />} />\n              <Route path=\"/cryptocurrencies\" element={<Cryptocurrencies />} />\n              {/* 'coinid' means it can be dynamic{1 or 2 or 3 ....} */}\n              <Route path=\"/crypto/:coinId\" element={<CryptoDetails />} />\n              <Route path=\"/news\" element={<News />} />\n              <Route path=\"*\" element={<Navigate to=\"/\" />} />\n            </Routes>\n          </div>\n        </Layout>\n        <div className=\"footer\">\n          <Typography.Title\n            level={5}\n            style={{ color: \"white\", textAlign: \"center\" }}\n          >\n            Cryptoverse <br />\n            All rights Reserved\n          </Typography.Title>\n          <Space>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/exchanges\">Exchanges</Link>\n            <Link to=\"/news\">News</Link>\n          </Space>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import {configureStore} from '@reduxjs/toolkit'\r\nimport { cryptoApi } from '../services/cryptoApi'\r\nimport {cryptoNewsApi } from '../services/cryptoNewsApi'\r\n\r\nexport const store = configureStore({\r\n    reducer:{\r\n         [cryptoApi.reducerPath]:cryptoApi.reducer,\r\n         [cryptoNewsApi.reducerPath]:cryptoNewsApi.reducer,\r\n    },\r\n    middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(cryptoApi.middleware),\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'antd/dist/antd.css'\nimport { Provider } from 'react-redux';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport {store} from './app/store.js'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    \n   <Router>\n   <Provider store={store}>\n      \n      <App />\n      \n      </Provider>\n   </Router>\n   \n  \n \n\n  \n   \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}